{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s6\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\info 
{\title {\comment My Project }My Project}
{\comment Generated by doxygen 1.14.0.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt My Project}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b LASTFUNC_HISTORY} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TIME_ENTRY} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/{\b assert.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/{\b kernel.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/{\b kernel.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/{\b mtstatus.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/{\b time.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/{\b trace.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LASTFUNC_HISTORY Struct Reference\par \pard\plain 
{\tc\tcl2 \v LASTFUNC_HISTORY}
{\xe \v LASTFUNC_HISTORY}
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\par
{
{\f2 #include <trace.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b names} [{\b LASTFUNC_HISTORY_SIZE}][{\b LASTFUNC_BUFFER_SIZE}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b current_index}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 13} of file {\b trace.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v current_index\:LASTFUNC_HISTORY}
{\xe \v LASTFUNC_HISTORY\:current_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int current_index}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b trace.h}.}\par
}
{\xe \v names\:LASTFUNC_HISTORY}
{\xe \v LASTFUNC_HISTORY\:names}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t names[{\b LASTFUNC_HISTORY_SIZE}][{\b LASTFUNC_BUFFER_SIZE}]}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b trace.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/{\b trace.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TIME_ENTRY Struct Reference\par \pard\plain 
{\tc\tcl2 \v TIME_ENTRY}
{\xe \v TIME_ENTRY}
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\par
{
{\f2 #include <time.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b second}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b minute}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b hour}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b day}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b month}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b year}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 18} of file {\b time.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v day\:TIME_ENTRY}
{\xe \v TIME_ENTRY\:day}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t day}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b time.h}.}\par
}
{\xe \v hour\:TIME_ENTRY}
{\xe \v TIME_ENTRY\:hour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t hour}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b time.h}.}\par
}
{\xe \v minute\:TIME_ENTRY}
{\xe \v TIME_ENTRY\:minute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t minute}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b time.h}.}\par
}
{\xe \v month\:TIME_ENTRY}
{\xe \v TIME_ENTRY\:month}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t month}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b time.h}.}\par
}
{\xe \v second\:TIME_ENTRY}
{\xe \v TIME_ENTRY\:second}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t second}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b time.h}.}\par
}
{\xe \v year\:TIME_ENTRY}
{\xe \v TIME_ENTRY\:year}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t year}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b time.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/{\b time.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/assert.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/assert.h}
{\xe \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/assert.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b assert}(...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v assert\:assert.h}
{\xe \v assert.h\:assert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define assert( ...)}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf19 do} \{ \} {\cf19 while}(0)\par
}
{
Definition at line {\b 54} of file {\b assert.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
assert.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/assert.h}
{\xe \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/assert.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * PROJECT:     MatanelOS Kernel}\par
00003 {\cf20  * LICENSE:     NONE}\par
00004 {\cf20  * PURPOSE:     Runtime Assertion Implementation.}\par
00005 {\cf20  */}\par
00006 \par
00007 {\cf21 #ifndef X86_ASSERT_H}\par
00008 {\cf21 #define X86_ASSERT_H}\par
00009 \par
00010 {\cf21 #ifdef DEBUG}\par
00011 {\cf21 #include <stddef.h>}\par
00012 {\cf21 #include <stdbool.h>}\par
00013 {\cf21 #include <stdint.h>}\par
00014 {\cf21 #include "bugcheck/bugcheck.h"}\par
00015 __attribute__((noreturn))\par
00016 {\cf17 static} {\cf18 void} assert_fail({\cf17 const} {\cf18 char}* expr, {\cf17 const} {\cf18 char}* reason, {\cf17 const} {\cf18 char}* file, {\cf17 const} {\cf18 char}* func, {\cf18 int} line) \{\par
00017     {\cf20 // Getting here means a runtime assertion has failed (assert())}\par
00018     BUGCHECK_ADDITIONALS addt = \{ 0 \};\par
00019 \par
00020     {\cf20 // It can be versatile, with a reason or not.}\par
00021     {\cf19 if} (reason) \{\par
00022         ksnprintf(addt.str, {\cf17 sizeof}(addt.str), {\cf22 "An assertion has failed (%s)\\nReason: %s\\nLocation: %s:%d, function %s"}, expr, reason, file, line, func);\par
00023         CTX_FRAME ctx;\par
00024         SAVE_CTX_FRAME(&ctx);\par
00025         MtBugcheckEx(&ctx, NULL, ASSERTION_FAILURE, &addt, {\cf17 true});\par
00026     \}\par
00027     {\cf19 else} \{\par
00028         ksnprintf(addt.str, {\cf17 sizeof}(addt.str), {\cf22 "An assertion has failed (%s)\\nLocation: %s:%d, function %s"}, expr, file, line, func);\par
00029         CTX_FRAME ctx;\par
00030         SAVE_CTX_FRAME(&ctx);\par
00031         MtBugcheckEx(&ctx, NULL, ASSERTION_FAILURE, &addt, {\cf17 true});\par
00032     \}\par
00033 \par
00034     __builtin_unreachable();\par
00035 \}\par
00036 \par
00037 {\cf20 // Helper macros for argument counting}\par
00038 {\cf21 #define GET_MACRO(_1,_2,NAME,...) NAME}\par
00039 \par
00040 {\cf20 // Base macros}\par
00041 {\cf21 #define ASSERT1(expr) \\}\par
00042 {\cf21     ((expr) ? (void)0 : assert_fail(#expr, NULL, __FILE__, __func__, __LINE__))}\par
00043 \par
00044 {\cf21 #define ASSERT2(expr, reason) \\}\par
00045 {\cf21     ((expr) ? (void)0 : assert_fail(#expr, reason, __FILE__, __func__, __LINE__))}\par
00046 \par
00047 {\cf20 // assert(expression) OR assert(expression, "expression must be ...")}\par
00048 {\cf21 #define assert(...) GET_MACRO(__VA_ARGS__, ASSERT2, ASSERT1)(__VA_ARGS__)}\par
00049 \par
00050 {\cf21 #else}\par
00051 {\cf20 // Make intellisense be quiet.}\par
00052 \par
00053 {\cf20 // assert(expression) OR assert(expression, "expression must be ...")}\par
00054 {\cf21 #define assert(...) do \{ \} while(0)}\par
00055 {\cf21 #endif}\par
00056 \par
00057 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/kernel.c File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/kernel.c}
{\xe \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/kernel.c}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "kernel.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_AHCI_CONTROLLERS}\~ 32\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_MEMORY_MAP_SIZE}\~ 0x4000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ISRAEL_UTC_OFFSET}\~ 3\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copy_memory_map} ({\b BOOT_INFO} *boot_info)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copy_gop} ({\b BOOT_INFO} *boot_info)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b init_boot_info} ({\b BOOT_INFO} *boot_info)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b InitCPU} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b kernel_idle_checks} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b kernel_main} ({\b BOOT_INFO} *boot_info)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint64_t {\b ahci_bases_local} [{\b MAX_AHCI_CONTROLLERS}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GOP_PARAMS {\b gop_local}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BOOT_INFO} {\b boot_info_local}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isBugChecking} = false\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LASTFUNC_HISTORY} {\b lastfunc_history} = \{ .current_index = -1 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CPU {\b cpu}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ISRAEL_UTC_OFFSET\:kernel.c}
{\xe \v kernel.c\:ISRAEL_UTC_OFFSET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ISRAEL_UTC_OFFSET\~ 3}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX_AHCI_CONTROLLERS\:kernel.c}
{\xe \v kernel.c\:MAX_AHCI_CONTROLLERS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_AHCI_CONTROLLERS\~ 32}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b kernel.c}.}\par
}
{\xe \v MAX_MEMORY_MAP_SIZE\:kernel.c}
{\xe \v kernel.c\:MAX_MEMORY_MAP_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_MEMORY_MAP_SIZE\~ 0x4000}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b kernel.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v copy_gop\:kernel.c}
{\xe \v kernel.c\:copy_gop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void copy_gop ({\b BOOT_INFO} * boot_info)}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b kernel.c}.}\par
}
{\xe \v copy_memory_map\:kernel.c}
{\xe \v kernel.c\:copy_memory_map}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void copy_memory_map ({\b BOOT_INFO} * boot_info)}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b kernel.c}.}\par
}
{\xe \v init_boot_info\:kernel.c}
{\xe \v kernel.c\:init_boot_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void init_boot_info ({\b BOOT_INFO} * boot_info)}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 63} of file {\b kernel.c}.}\par
}
{\xe \v InitCPU\:kernel.c}
{\xe \v kernel.c\:InitCPU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void InitCPU (void )}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 96} of file {\b kernel.c}.}\par
}
{\xe \v kernel_idle_checks\:kernel.c}
{\xe \v kernel.c\:kernel_idle_checks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void kernel_idle_checks (void )}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 114} of file {\b kernel.c}.}\par
}
{\xe \v kernel_main\:kernel.c}
{\xe \v kernel.c\:kernel_main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void kernel_main ({\b BOOT_INFO} * boot_info)}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remember that paging is on when this is called, as UEFI turned it on. \par
}{
Definition at line {\b 171} of file {\b kernel.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ahci_bases_local\:kernel.c}
{\xe \v kernel.c\:ahci_bases_local}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint64_t ahci_bases_local[{\b MAX_AHCI_CONTROLLERS}]}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b kernel.c}.}\par
}
{\xe \v boot_info_local\:kernel.c}
{\xe \v kernel.c\:boot_info_local}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BOOT_INFO} boot_info_local}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b kernel.c}.}\par
}
{\xe \v cpu\:kernel.c}
{\xe \v kernel.c\:cpu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPU cpu}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b kernel.c}.}\par
}
{\xe \v gop_local\:kernel.c}
{\xe \v kernel.c\:gop_local}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GOP_PARAMS gop_local}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b kernel.c}.}\par
}
{\xe \v isBugChecking\:kernel.c}
{\xe \v kernel.c\:isBugChecking}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool isBugChecking = false}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b kernel.c}.}\par
}
{\xe \v lastfunc_history\:kernel.c}
{\xe \v kernel.c\:lastfunc_history}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LASTFUNC_HISTORY} lastfunc_history = \{ .current_index = -1 \}}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b kernel.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
kernel.c\par \pard\plain 
{\tc\tcl2 \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/kernel.c}
{\xe \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/kernel.c}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * PROJECT:      MatanelOS Kernel}\par
00003 {\cf20  * LICENSE:      GPLv3}\par
00004 {\cf20  * PURPOSE:      Core Kernel Entry Point for MatanelOS.}\par
00005 {\cf20  */}\par
00006 \par
00007 {\cf21 #include "kernel.h"}\par
00008 {\cf21 #ifndef _MSC_VER}\par
00009 {\cf17 _Static_assert}({\cf17 sizeof}({\cf18 void}*) == 8, {\cf22 "This Kernel is 64 bit only! The 32bit version is deprecated."});\par
00010 {\cf21 #endif}\par
00011 \par
00012 {\cf21 #define MAX_AHCI_CONTROLLERS 32}\par
00013 uint64_t ahci_bases_local[MAX_AHCI_CONTROLLERS];\par
00014 \par
00015 GOP_PARAMS gop_local;\par
00016 BOOT_INFO boot_info_local;\par
00017 \par
00018 {\cf20 //static MUTEX mutx;}\par
00019 {\cf20 //MUTEX* sharedMutex = &mutx;}\par
00020 \par
00021 {\cf20 /*}\par
00022 {\cf20 Global variables initialization}\par
00023 {\cf20 */}\par
00024 {\cf18 bool} isBugChecking = {\cf17 false};\par
00025 LASTFUNC_HISTORY lastfunc_history = \{ .current_index = -1 \};\par
00026 CPU cpu;\par
00027 \par
00028 {\cf20 /*}\par
00029 {\cf20 Ended}\par
00030 {\cf20 */}\par
00031 {\cf21 #define MAX_MEMORY_MAP_SIZE 0x4000  }{\cf20 // 16 KB, enough for ~256 descriptors}\par
00032 \par
00033 {\cf17 static} EFI_MEMORY_DESCRIPTOR memory_map_copy[MAX_MEMORY_MAP_SIZE / {\cf17 sizeof}(EFI_MEMORY_DESCRIPTOR)];\par
00034 \par
00035 {\cf18 void} copy_memory_map(BOOT_INFO* boot_info) \{\par
00036     {\cf19 if} (!boot_info || !boot_info->MemoryMap) {\cf19 return};\par
00037     {\cf19 if} (boot_info->MapSize > MAX_MEMORY_MAP_SIZE) \{\par
00038         {\cf20 // handle error, memory map too big}\par
00039         MtBugcheck(NULL, NULL, MEMORY_MAP_SIZE_OVERRUN, 0, {\cf17 false});\par
00040     \}\par
00041 \par
00042     {\cf20 // Copy the entire memory map into the static buffer}\par
00043     kmemcpy(memory_map_copy, boot_info->MemoryMap, boot_info->MapSize);\par
00044 \par
00045     boot_info_local.MemoryMap = memory_map_copy;\par
00046     boot_info_local.MapSize = boot_info->MapSize;\par
00047     boot_info_local.DescriptorSize = boot_info->DescriptorSize;\par
00048     boot_info_local.DescriptorVersion = boot_info->DescriptorVersion;\par
00049 \}\par
00050 \par
00051 {\cf18 void} copy_gop(BOOT_INFO* boot_info) \{\par
00052     {\cf19 if} (!boot_info || !boot_info->Gop) {\cf19 return};\par
00053 \par
00054     {\cf20 // Copy the GOP data to a local global variable}\par
00055     gop_local = *(boot_info->Gop);\par
00056 \par
00057     {\cf20 // Update all relevant pointers to point to the local copy}\par
00058     boot_info->Gop = &gop_local;\par
00059     boot_info_local.Gop = &gop_local;\par
00060 \}\par
00061 \par
00062 \par
00063 {\cf18 void} init_boot_info(BOOT_INFO* boot_info) \{\par
00064     {\cf19 if} (!boot_info) {\cf19 return};\par
00065 \par
00066     copy_memory_map(boot_info);\par
00067     copy_gop(boot_info);\par
00068     {\cf19 if} (boot_info->AhciCount > MAX_AHCI_CONTROLLERS) \{\par
00069         MtBugcheck(NULL, NULL, BAD_AHCI_COUNT, 0, {\cf17 false});\par
00070     \}\par
00071     {\cf19 for} (uint32_t i = 0; i < boot_info->AhciCount; i++) \{\par
00072         ahci_bases_local[i] = boot_info->AhciBarBases[i];\par
00073     \}\par
00074     boot_info_local.AhciBarBases = ahci_bases_local;\par
00075     boot_info_local.AhciCount = boot_info->AhciCount;\par
00076     boot_info_local.KernelStackTop = boot_info->KernelStackTop;\par
00077     boot_info_local.Pml4Phys = boot_info->Pml4Phys;\par
00078 \}\par
00079 \par
00080 {\cf17 static} {\cf18 void} InitialiseControlRegisters({\cf18 void}) \{\par
00081 \par
00082     {\cf20 /* CR0 */}\par
00083     {\cf18 unsigned} {\cf18 long} cr0 = __read_cr0();\par
00084     cr0 |= (1UL << 16); {\cf20 // Set bit 16 (WRITE PROTECT), so when the kernel touches read only memory it would #PF.}\par
00085 {\cf21 #ifdef DISABLE_CACHE}\par
00086     cr0 |= (1UL << 30); {\cf20 // Set bit 30 (CACHE DISABLE).}\par
00087 {\cf21 #endif}\par
00088     __write_cr0(cr0);\par
00089 \par
00090     {\cf20 /* CR4 */}\par
00091     {\cf18 unsigned} {\cf18 long} cr4 = __read_cr4();\par
00092     cr4 |= (1UL << 11); {\cf20 // Set bit 11 - User Mode Instruction Prevention. This'll be useful against user mode attacks to locate IDT/GDT/LDT...}\par
00093     __write_cr4(cr4);\par
00094 \}\par
00095 \par
00096 {\cf18 void} InitCPU({\cf18 void}) \{\par
00097     cpu.currentIrql = PASSIVE_LEVEL;\par
00098     cpu.schedulerEnabled = NULL; {\cf20 // since NULL is 0, it would be false.}\par
00099     cpu.currentThread = NULL;\par
00100     cpu.readyQueue.head = cpu.readyQueue.tail = NULL;\par
00101     __writemsr(IA32_KERNEL_GS_BASE, (uint64_t) & cpu);\par
00102     spinlock_init(&cpu.readyQueue.lock);\par
00103 \}\par
00104 \par
00105 {\cf17 static} {\cf17 inline} {\cf18 bool} interrupts_enabled({\cf18 void}) \{\par
00106     {\cf18 unsigned} {\cf18 long} flags;\par
00107     __asm__ __volatile__({\cf22 "pushfq; popq %0"}\par
00108         : {\cf22 "=r"}(flags)\par
00109         :\par
00110         : {\cf22 "memory"}, {\cf22 "cc"});\par
00111     {\cf19 return} (flags & (1UL << 9)) != 0; {\cf20 // IF is bit 9}\par
00112 \}\par
00113 \par
00114 {\cf18 void} kernel_idle_checks({\cf18 void}) \{\par
00115     tracelast_func({\cf22 "kernel_idle_checks - Thread"});\par
00116     {\cf17 static} {\cf17 volatile} {\cf18 bool} first_time = {\cf17 true};\par
00117 \par
00118     {\cf19 if} (first_time) \{\par
00119         first_time = {\cf17 false};\par
00120         gop_printf_forced(0xFF000FF0, {\cf22 "Reached the scheduler!\\n"});\par
00121         {\cf19 for} ({\cf17 volatile} uint64_t i = 0; i < 100000000ULL; ++i) \{\par
00122             {\cf20 /* delay loop */}\par
00123         \}\par
00124 \par
00125         gop_printf_forced(0xFF000FF0, {\cf22 "**Ended Testing Thread Execution**\\n"});\par
00126     \}\par
00127     assert((interrupts_enabled()) == {\cf17 true}, {\cf22 "Interrupts are not enabled..."});\par
00128     {\cf19 while} (1) \{\par
00129         __hlt();\par
00130         {\cf20 //Schedule();}\par
00131     \}\par
00132 \}\par
00133 \par
00134 {\cf17 static} {\cf18 void} test(MUTEX* mut) \{\par
00135     tracelast_func({\cf22 "test - Thread"});\par
00136     Thread* currentThread = MtGetCurrentThread();\par
00137     gop_printf_forced(0xFF00FF00, {\cf22 "Hit Test! test thread ptr: %p\\n"}, currentThread);\par
00138     gop_printf(COLOR_GREEN, {\cf22 "(test) Acquiring Mutex Object: %p\\n"}, mut);\par
00139     MTSTATUS status = MtAcquireMutexObject(mut);\par
00140     gop_printf(COLOR_GREEN, {\cf22 "(test) status returned: %p\\n"}, status);\par
00141     {\cf17 volatile} uint64_t z = 0;\par
00142     {\cf19 for} (uint64_t i = 0; i < 0xFFFFFFF; i++) \{\par
00143         z++;\par
00144     \}\par
00145     gop_printf(COLOR_GREEN, {\cf22 "(test) Releasing Mutex Object: %p\\n"}, mut);\par
00146     MtReleaseMutexObject(mut);\par
00147     gop_printf_forced(0xFFA020F0, {\cf22 "**Ended Test.**\\n"});\par
00148 \}\par
00149 \par
00150 {\cf17 static} {\cf18 void} funcWithParam(MUTEX* mut) \{\par
00151     tracelast_func({\cf22 "funcWithParam - Thread"});\par
00152     {\cf20 //gop_printf_forced(COLOR_OLIVE, "Hit funcWithParam, Integer: %d\\n", *integer);}\par
00153     gop_printf(COLOR_OLIVE, {\cf22 "Hit funcWithParam - funcWithParam threadptr: %p\\n"}, MtGetCurrentThread());\par
00154     {\cf18 char} buf[256];\par
00155     ksnprintf(buf, {\cf17 sizeof}(buf), {\cf22 "In funcwithParam! - thread ptr: %p, mutex ptr: %p"}, MtGetCurrentThread(), mut);\par
00156     vfs_write({\cf22 "/test.txt"}, buf, kstrlen(buf), WRITE_MODE_CREATE_OR_REPLACE);\par
00157     gop_printf(COLOR_OLIVE, {\cf22 "(funcWithParam) Acquiring Mutex Object: %p\\n"}, mut);\par
00158     MtAcquireMutexObject(mut);\par
00159     {\cf17 volatile} uint64_t z = 0;\par
00160     {\cf19 for} (uint64_t i = 0; i < 0xFFFFFFF; i++) \{\par
00161         z++;\par
00162     \}\par
00163     gop_printf(COLOR_OLIVE, {\cf22 "(funcWithParam) Releasing Mutex Object: %p\\n"}, mut);\par
00164     MtReleaseMutexObject(mut);\par
00165     Thread* currentThread = MtGetCurrentThread();\par
00166     gop_printf(COLOR_OLIVE, {\cf22 "Current thread in funcWithParam: %p\\n"}, currentThread);\par
00167     gop_printf_forced(COLOR_OLIVE, {\cf22 "**Ended funcWithParam.**\\n"});\par
00168 \}\par
00169 \par
00171 {\cf18 void} kernel_main(BOOT_INFO* boot_info) \{\par
00172     {\cf20 //tracelast_func("kernel_main");}\par
00173     {\cf20 // 1. CORE SYSTEM INITIALIZATION}\par
00174     __cli();\par
00175     {\cf20 // Initialize the CR (Control Registers) registers to our settings.}\par
00176     InitialiseControlRegisters();\par
00177     {\cf20 // Zero the BSS.}\par
00178     zero_bss();\par
00179     {\cf20 // Create the local boot struct.}\par
00180     init_boot_info(boot_info);\par
00181     {\cf20 // Initialize the global CPU struct.}\par
00182     InitCPU();\par
00183     {\cf20 // Initialize interrupts & exceptions.}\par
00184     init_interrupts();\par
00185     {\cf20 // Initialize the frame bitmaps for dynamic frame allocation.}\par
00186     frame_bitmap_init();\par
00187     {\cf20 // Finally, initialize our heap for memory allocation (like threads, processes, structs..)}\par
00188     init_heap();\par
00189     _MtSetIRQL(PASSIVE_LEVEL);\par
00190     {\cf20 /* Initiate Scheduler and DPCs */}\par
00191     InitScheduler();\par
00192     init_dpc_system();\par
00193     gop_clear_screen(&gop_local, 0); {\cf20 // 0 is just black. (0x0000000)}\par
00194     \par
00195     {\cf20 //MemoryTestStable();}\par
00196     {\cf20 //__cli();}\par
00197     {\cf20 //__hlt();}\par
00198     {\cf17 extern} uint32_t cursor_x, cursor_y;\par
00199     cursor_x = cursor_y = 0; {\cf20 // set to 0, since it somehow decrements them.}\par
00200 \par
00201     uint64_t rip;\par
00202     __asm__ {\cf17 volatile} (\par
00203         {\cf22 "lea 1f(%%rip), %0\\n\\t"}  {\cf20 // Calculate the address of label 1 relative to RIP}\par
00204         {\cf22 "1:"}                     {\cf20 // The label whose address we want}\par
00205         : {\cf22 "=r"}(rip)              {\cf20 // Output to the 'rip' variable}\par
00206         );\par
00207 \par
00208     gop_printf_forced(0xFFFFFF00, {\cf22 "Current RIP: %p\\n"}, rip);\par
00209 \par
00210     {\cf19 if} (rip >= KERNEL_VA_START) \{\par
00211         gop_printf_forced(0x00FF00FF, {\cf22 "**[+] Running in higher-half**\\n"});\par
00212     \}\par
00213     {\cf19 else} \{\par
00214         gop_printf_forced(0xFF0000FF, {\cf22 "[-] Still identity-mapped\\n"});\par
00215     \}\par
00216 \par
00217     {\cf18 void}* buf = MtAllocateVirtualMemory(64, 16);\par
00218     gop_printf_forced(0xFFFFFF00, {\cf22 "buf addr: %p\\n"}, buf);\par
00219     {\cf18 void}* buf2 = MtAllocateVirtualMemory(128, 16);\par
00220     gop_printf_forced(0xFFFFFF00, {\cf22 "buf2 addr: %p\\n"}, buf2);\par
00221     MtFreeVirtualMemory(buf2);\par
00222     {\cf18 void}* buf3 = MtAllocateVirtualMemory(128, 16);\par
00223     gop_printf_forced(0xFFFFFF00, {\cf22 "buf3 addr (should be same as buf2): %p\\n"}, buf3);\par
00224     {\cf18 void}* buf4 = MtAllocateVirtualMemory(2048, 16);\par
00225     gop_printf_forced(0xFF964B00, {\cf22 "buf4 addr (should reside after buf3, allocated 2048 bytes): %p\\n"}, buf4);\par
00226     {\cf18 void}* buf5 = MtAllocateVirtualMemory(64, 16);\par
00227     gop_printf_forced(0xFF964B00, {\cf22 "buf5 addr (should be a larger addr): %p\\n"}, buf5);\par
00228     {\cf18 void}* buf6 = MtAllocateVirtualMemory(5000, 64);\par
00229     gop_printf_forced(0xFFFFFF00, {\cf22 "buf6 addr (should use dynamic memory): %p\\n"}, buf6);\par
00230     {\cf18 void}* buf7 = MtAllocateVirtualMemory(10000, 128);\par
00231     gop_printf_forced(0xFFFFFF00, {\cf22 "buf7 addr (should use dynamic memory, extremely larger): %p\\n"}, buf7);\par
00232     {\cf20 // check}\par
00233     {\cf18 void}* addr = 0;\par
00234     gop_printf(COLOR_ORANGE, {\cf22 "Address: %p is %s\\n"}, addr, MtIsAddressValid(addr) ? {\cf22 "Valid"} : {\cf22 "Invalid"});\par
00235     gop_printf(COLOR_ORANGE, {\cf22 "Address %p (buf7) is %s\\n"}, buf7, MtIsAddressValid(buf7) ? {\cf22 "Valid"} : {\cf22 "Invalid"});\par
00236     gop_printf(COLOR_MAGENTA, {\cf22 "BUF7 (VIRT): %p | (PHYS): %p\\n"}, buf7, MtTranslateVirtualToPhysical(buf7));\par
00237     \par
00238 {\cf21 #ifdef CAUSE_BUGCHECK}\par
00239     CTX_FRAME regs;\par
00240     SAVE_CTX_FRAME(&regs);\par
00241     MtBugcheck(&regs, NULL, MANUALLY_INITIATED_CRASH, 0xDEADBEEF, {\cf17 true});\par
00242 {\cf21 #endif}\par
00243     \par
00244     {\cf19 if} (checkcpuid()) \{\par
00245         {\cf18 char} str[256];\par
00246         getCpuName(str);\par
00247         gop_printf(COLOR_GREEN, {\cf22 "CPU Identified: %s\\n"}, str);\par
00248     \}\par
00249 \par
00250     MTSTATUS status;\par
00251     status = vfs_init();\par
00252     gop_printf(COLOR_RED, {\cf22 "vfs_init returned: %s\\n"}, MT_SUCCEEDED(status) ? {\cf22 "Success"} : {\cf22 "Unsuccessful"});\par
00253     {\cf19 if} (MT_FAILURE(status)) \{\par
00254         CTX_FRAME ctx;\par
00255         SAVE_CTX_FRAME(&ctx);\par
00256         MtBugcheck(&ctx, NULL, FILESYSTEM_PANIC, 0, {\cf17 false});\par
00257     \}\par
00258 \par
00259     TIME_ENTRY currTime = get_time();\par
00260 {\cf21 #define ISRAEL_UTC_OFFSET 3}\par
00261     gop_printf(COLOR_GREEN, {\cf22 "Current Time: %d/%d/%d | %d:%d:%d\\n"}, currTime.year, currTime.month, currTime.day, currTime.hour + ISRAEL_UTC_OFFSET, currTime.minute, currTime.second);\par
00262 \par
00263     {\cf18 char} listings[256];\par
00264     status = vfs_listdir({\cf22 "/"}, listings, {\cf17 sizeof}(listings));\par
00265     gop_printf(COLOR_RED, {\cf22 "vfs_listdir returned: %p\\n"}, status);\par
00266     gop_printf(COLOR_RED, {\cf22 "root directory is: %s\\n"}, vfs_is_dir_empty({\cf22 "/"}) ? {\cf22 "Empty"} : {\cf22 "Not Empty"});\par
00267     gop_printf(COLOR_CYAN, {\cf22 "%s"}, listings);\par
00268     MUTEX* sharedMutex = MtAllocateVirtualMemory({\cf17 sizeof}(MUTEX), _Alignof(MUTEX));\par
00269     {\cf19 if} (!sharedMutex) \{ gop_printf(COLOR_RED, {\cf22 "It's null\\n"}); __hlt(); \}\par
00270     status = MtInitializeMutexObject(sharedMutex);\par
00271     gop_printf(COLOR_RED, {\cf22 "[MTSTATUS] MtInitializeObject Returned: %p\\n"}, status);\par
00272     MtCreateThread((ThreadEntry)test, sharedMutex, DEFAULT_TIMESLICE_TICKS, {\cf17 true});\par
00273     {\cf20 //int integer = 1234;}\par
00274     MtCreateThread((ThreadEntry)funcWithParam, sharedMutex, DEFAULT_TIMESLICE_TICKS, {\cf17 true}); {\cf20 // I have tested 5+ threads, works perfectly as it should.}\par
00275     {\cf20 /* Enable LAPIC Now. */}\par
00276     lapic_init_bsp();\par
00277     lapic_enable();\par
00278     init_lapic_timer(100); {\cf20 // 10ms}\par
00279     __sti();\par
00280     Schedule();\par
00281 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/kernel.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/kernel.h}
{\xe \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/kernel.h}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stddef.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <stdint.h>}\par
{\f2 #include <stdatomic.h>}\par
{\f2 #include "trace.h"}\par
{\f2 #include "assert.h"}\par
{\f2 #include "intrin/intrin.h"}\par
{\f2 #include "cpu/cpu.h"}\par
{\f2 #include "filesystem/fat32/fat32.h"}\par
{\f2 #include "memory/allocator/uefi_memory.h"}\par
{\f2 #include "memory/memory.h"}\par
{\f2 #include "memory/paging/paging.h"}\par
{\f2 #include "defs/stdarg_myos.h"}\par
{\f2 #include "interrupts/idt.h"}\par
{\f2 #include "interrupts/handlers/handlers.h"}\par
{\f2 #include "bugcheck/bugcheck.h"}\par
{\f2 #include "memory/allocator/allocator.h"}\par
{\f2 #include "drivers/blk/block.h"}\par
{\f2 #include "drivers/ahci/ahci.h"}\par
{\f2 #include "drivers/gop/gop.h"}\par
{\f2 #include "cpu/cpuid/cpuid.h"}\par
{\f2 #include "time.h"}\par
{\f2 #include "filesystem/vfs/vfs.h"}\par
{\f2 #include "cpu/apic/apic.h"}\par
{\f2 #include "cpu/mutex/mutex.h"}\par
{\f2 #include "cpu/events/events.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UNREFERENCED_PARAMETER}(x)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
#define CAUSE_BUGCHECK }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b gop_printf_forced}(color,  fmt, ...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ALLOCATIONS}\~ 1000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BLOCK_SIZE}\~ 128\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ALIGNMENT}\~ 16\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct _BLOCK_DEVICE {\b BLOCK_DEVICE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct _BOOT_INFO {\b BOOT_INFO}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct _CTX_FRAME {\b CTX_FRAME}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b kernel_idle_checks} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b kernel_main} ({\b BOOT_INFO} *boot_info)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copy_memory_map} ({\b BOOT_INFO} *boot_info)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copy_gop} ({\b BOOT_INFO} *boot_info)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b init_boot_info} ({\b BOOT_INFO} *boot_info)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b InitCPU} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_context_frame} ({\b CTX_FRAME} *registers)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_interrupt_frame} (INT_FRAME *intfr)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isBugChecking}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LASTFUNC_HISTORY} {\b lastfunc_history}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ALIGNMENT\:kernel.h}
{\xe \v kernel.h\:ALIGNMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ALIGNMENT\~ 16}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b kernel.h}.}\par
}
{\xe \v ALLOCATIONS\:kernel.h}
{\xe \v kernel.h\:ALLOCATIONS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ALLOCATIONS\~ 1000}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 79} of file {\b kernel.h}.}\par
}
{\xe \v BLOCK_SIZE\:kernel.h}
{\xe \v kernel.h\:BLOCK_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BLOCK_SIZE\~ 128}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 80} of file {\b kernel.h}.}\par
}
{\xe \v gop_printf_forced\:kernel.h}
{\xe \v kernel.h\:gop_printf_forced}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define gop_printf_forced( color,  fmt,  ...)}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid gop_printf(color, fmt, ##__VA_ARGS__)\par
}
{
Definition at line {\b 77} of file {\b kernel.h}.}\par
}
{\xe \v UNREFERENCED_PARAMETER\:kernel.h}
{\xe \v kernel.h\:UNREFERENCED_PARAMETER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UNREFERENCED_PARAMETER( x)}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid (void)(x)\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
#define CAUSE_BUGCHECK }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
#define REMINDER #define DISABLE_CACHE \par
}{
Definition at line {\b 41} of file {\b kernel.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v BLOCK_DEVICE\:kernel.h}
{\xe \v kernel.h\:BLOCK_DEVICE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct _BLOCK_DEVICE {\b BLOCK_DEVICE}}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b kernel.h}.}\par
}
{\xe \v BOOT_INFO\:kernel.h}
{\xe \v kernel.h\:BOOT_INFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct _BOOT_INFO {\b BOOT_INFO}}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b kernel.h}.}\par
}
{\xe \v CTX_FRAME\:kernel.h}
{\xe \v kernel.h\:CTX_FRAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct _CTX_FRAME {\b CTX_FRAME}}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b kernel.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v copy_gop\:kernel.h}
{\xe \v kernel.h\:copy_gop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void copy_gop ({\b BOOT_INFO} * boot_info)}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b kernel.c}.}\par
}
{\xe \v copy_memory_map\:kernel.h}
{\xe \v kernel.h\:copy_memory_map}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void copy_memory_map ({\b BOOT_INFO} * boot_info)}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b kernel.c}.}\par
}
{\xe \v init_boot_info\:kernel.h}
{\xe \v kernel.h\:init_boot_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void init_boot_info ({\b BOOT_INFO} * boot_info)}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 63} of file {\b kernel.c}.}\par
}
{\xe \v InitCPU\:kernel.h}
{\xe \v kernel.h\:InitCPU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void InitCPU (void )}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 96} of file {\b kernel.c}.}\par
}
{\xe \v kernel_idle_checks\:kernel.h}
{\xe \v kernel.h\:kernel_idle_checks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void kernel_idle_checks (void )}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 114} of file {\b kernel.c}.}\par
}
{\xe \v kernel_main\:kernel.h}
{\xe \v kernel.h\:kernel_main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void kernel_main ({\b BOOT_INFO} * boot_info)}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Remember that paging is on when this is called, as UEFI turned it on. \par
}{
Definition at line {\b 171} of file {\b kernel.c}.}\par
}
{\xe \v read_context_frame\:kernel.h}
{\xe \v kernel.h\:read_context_frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_context_frame ({\b CTX_FRAME} * registers){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v read_interrupt_frame\:kernel.h}
{\xe \v kernel.h\:read_interrupt_frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_interrupt_frame (INT_FRAME * intfr){\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v isBugChecking\:kernel.h}
{\xe \v kernel.h\:isBugChecking}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool isBugChecking{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b kernel.c}.}\par
}
{\xe \v lastfunc_history\:kernel.h}
{\xe \v kernel.h\:lastfunc_history}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LASTFUNC_HISTORY} lastfunc_history{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b kernel.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
kernel.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/kernel.h}
{\xe \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/kernel.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * PROJECT:     MatanelOS Kernel}\par
00003 {\cf20  * LICENSE:     NONE}\par
00004 {\cf20  * PURPOSE:     Core Kernel Includes, includes all core and necessary header files.}\par
00005 {\cf20  */}\par
00006 \par
00007 {\cf21 #ifndef X86_KERNEL_H}\par
00008 {\cf21 #define X86_KERNEL_H}\par
00009 \par
00010 {\cf20 // Standard headers, required.}\par
00011 {\cf21 #include <stddef.h>}\par
00012 {\cf21 #include <stdbool.h>}\par
00013 {\cf21 #include <stdint.h>}\par
00014 {\cf21 #include <stdatomic.h>}\par
00015 {\cf21 #include "trace.h"}\par
00016 \par
00017 {\cf20 // forward declarations, i don't think i need them.}\par
00018 \par
00019 {\cf17 typedef} {\cf17 struct }_BLOCK_DEVICE BLOCK_DEVICE;\par
00020 {\cf17 typedef} {\cf17 struct }_BOOT_INFO BOOT_INFO;\par
00021 {\cf17 typedef} {\cf17 struct }_CTX_FRAME CTX_FRAME;\par
00022 \par
00023 \par
00024 {\cf20 // Standard globals}\par
00025 {\cf17 extern} {\cf18 bool} isBugChecking;\par
00026 {\cf17 extern} LASTFUNC_HISTORY lastfunc_history; {\cf20 // grab lastfunc from kernel.c}\par
00027 \par
00028 {\cf20 /* Definitions that change kernel behaviour below */}\par
00029 \par
00030 {\cf20 /* Uncomment to trigger a bugcheck on entry */}\par
00032 \par
00033 {\cf20 /* Uncomment to show all reminders in a static assertion */}\par
00035 \par
00036 {\cf20 /* Uncomment to disable CPU Caching */}\par
00038 \par
00039 {\cf20 /* To define DEBUG globally, use a compiler flag. I removed this since I now transitioned each header to iself and others instead of relying on kernel.h that caused circular includes. */}\par
00040 \par
00041 {\cf21 #define UNREFERENCED_PARAMETER(x) (void)(x)}\par
00042 {\cf21 #include "assert.h"}\par
00043 {\cf21 #include "intrin/intrin.h"}\par
00044 {\cf21 #include "cpu/cpu.h"}\par
00045 {\cf21 #include "filesystem/fat32/fat32.h"}\par
00046 {\cf21 #include "memory/allocator/uefi_memory.h"}\par
00047 {\cf21 #include "memory/memory.h"}\par
00048 {\cf21 #include "memory/paging/paging.h"}\par
00049 {\cf21 #include "defs/stdarg_myos.h"}\par
00050 {\cf21 #include "interrupts/idt.h"}\par
00051 {\cf21 #include "interrupts/handlers/handlers.h"}\par
00052 {\cf21 #include "bugcheck/bugcheck.h"}\par
00053 {\cf21 #include "memory/allocator/allocator.h"}\par
00054 {\cf21 #include "drivers/blk/block.h"}\par
00055 {\cf21 #include "drivers/ahci/ahci.h"}\par
00056 {\cf21 #include "drivers/gop/gop.h"}\par
00057 {\cf21 #include "cpu/cpuid/cpuid.h"}\par
00058 {\cf21 #include "time.h"}\par
00059 {\cf21 #include "filesystem/vfs/vfs.h"}\par
00060 {\cf21 #include "cpu/apic/apic.h"}\par
00061 {\cf21 #include "cpu/mutex/mutex.h"}\par
00062 {\cf21 #include "cpu/events/events.h"}\par
00063 \par
00064 {\cf20 // Entry point in C}\par
00065 {\cf18 void} kernel_idle_checks({\cf18 void});\par
00066 {\cf18 void} kernel_main(BOOT_INFO* boot_info);\par
00067 {\cf20 // Function declarations.}\par
00068 {\cf18 void} copy_memory_map(BOOT_INFO* boot_info);\par
00069 {\cf18 void} copy_gop(BOOT_INFO* boot_info);\par
00070 {\cf18 void} init_boot_info(BOOT_INFO* boot_info);\par
00071 {\cf18 void} InitCPU({\cf18 void});\par
00072 \par
00073 {\cf20 // Custom assembly functions externals.}\par
00074 {\cf17 extern} {\cf18 void} read_context_frame(CTX_FRAME* registers);\par
00075 {\cf17 extern} {\cf18 void} read_interrupt_frame(INT_FRAME* intfr);\par
00076 \par
00077 {\cf21 #define gop_printf_forced(color, fmt, ...) gop_printf(color, fmt, ##__VA_ARGS__)}\par
00078 \par
00079 {\cf21 #define ALLOCATIONS 1000}\par
00080 {\cf21 #define BLOCK_SIZE  128}\par
00081 {\cf21 #define ALIGNMENT   16}\par
00082 \par
00084 {\cf20 // Stable memory test for MatanelOS allocator}\par
00085 {\cf17 static} uint32_t xorshift32(uint32_t* s) \{\par
00086     uint32_t x = *s;\par
00087     x ^= x << 13;\par
00088     x ^= x >> 17;\par
00089     x ^= x << 5;\par
00090     *s = x;\par
00091     {\cf19 return} x;\par
00092 \}\par
00093 \par
00094 {\cf17 static} {\cf18 int} MemoryTestStable({\cf18 void}) \{\par
00095     {\cf17 enum} \{\par
00096         TEST_ALLOCATIONS = 64,\par
00097         MAX_BLOCK = 1024,        {\cf20 // maximum random block size}\par
00098         MIN_BLOCK = 16,         {\cf20 // minimum block size}\par
00099         ALIGN_OPTIONS = 4\par
00100     \};\par
00101 \par
00102     {\cf18 void}* blocks[TEST_ALLOCATIONS];\par
00103     {\cf18 size_t} sizes[TEST_ALLOCATIONS];\par
00104     {\cf18 size_t} aligns[TEST_ALLOCATIONS];\par
00105     uint32_t patterns[TEST_ALLOCATIONS];\par
00106 \par
00107     uint32_t rng = 0xdeadbeef; {\cf20 // deterministic seed}\par
00108 \par
00109     {\cf20 // Phase 1: allocate with varied sizes & alignments, fill with pattern}\par
00110     {\cf19 for} ({\cf18 int} i = 0; i < TEST_ALLOCATIONS; ++i) \{\par
00111         uint32_t r = xorshift32(&rng);\par
00112         sizes[i] = MIN_BLOCK + (r % (MAX_BLOCK - MIN_BLOCK + 1));\par
00113         {\cf20 // pick alignment from \{8,16,32,64\}}\par
00114         {\cf18 size_t} align_choice = (size_t)(8 << (r & (ALIGN_OPTIONS - 1)));\par
00115         aligns[i] = align_choice;\par
00116         patterns[i] = r ^ (uint32_t)i;\par
00117 \par
00118         blocks[i] = MtAllocateVirtualMemory(sizes[i], aligns[i]);\par
00119         {\cf19 if} (!blocks[i]) \{\par
00120             gop_printf_forced(0xFFFF0000, {\cf22 "Alloc fail idx=%d sz=%u align=%u\\n"}, i, ({\cf18 unsigned})sizes[i], ({\cf18 unsigned})aligns[i]);\par
00121             {\cf19 return} -1;\par
00122         \}\par
00123 \par
00124         {\cf20 // Quick alignment check}\par
00125         {\cf19 if} (((uintptr_t)blocks[i] & (aligns[i] - 1)) != 0) \{\par
00126             gop_printf_forced(0xFFFF8000, {\cf22 "Misaligned idx=%d ptr=%p align=%u\\n"}, i, blocks[i], ({\cf18 unsigned})aligns[i]);\par
00127             {\cf19 return} -2;\par
00128         \}\par
00129 \par
00130         {\cf20 // Mark memory with pattern: repeating 4-byte pattern to detect shuffles}\par
00131         uint32_t pat = patterns[i];\par
00132         uint8_t* bp = (uint8_t*)blocks[i];\par
00133         {\cf19 for} ({\cf18 size_t} b = 0; b + 4 <= sizes[i]; b += 4) \{\par
00134             ((uint32_t*)(bp + b))[0] = pat;\par
00135         \}\par
00136         {\cf20 // tail bytes}\par
00137         {\cf19 for} ({\cf18 size_t} b = (sizes[i] / 4) * 4; b < sizes[i]; ++b) \{\par
00138             bp[b] = (uint8_t)(pat & 0xFF);\par
00139         \}\par
00140 \par
00141         {\cf20 // Confirm MtIsHeapAddressAllocated reports true}\par
00142         {\cf19 if} (!MtIsHeapAddressAllocated(blocks[i])) \{\par
00143             gop_printf_forced(0xFFFF8000, {\cf22 "MtIsHeapAddressAllocated false after alloc idx=%d\\n"}, i);\par
00144             {\cf19 return} -3;\par
00145         \}\par
00146     \}\par
00147 \par
00148     {\cf20 // Phase 2: verify contents}\par
00149     {\cf19 for} ({\cf18 int} i = 0; i < TEST_ALLOCATIONS; ++i) \{\par
00150         uint32_t pat = patterns[i];\par
00151         uint8_t* bp = (uint8_t*)blocks[i];\par
00152         {\cf19 for} ({\cf18 size_t} b = 0; b + 4 <= sizes[i]; b += 4) \{\par
00153             uint32_t v = ((uint32_t*)(bp + b))[0];\par
00154             {\cf19 if} (v != pat) \{\par
00155                 gop_printf_forced(0xFF0000FF, {\cf22 "Corrupt idx=%d offset=%u expected=0x%08x got=0x%08x\\n"},\par
00156                     i, ({\cf18 unsigned})b, pat, v);\par
00157                 {\cf19 return} -4;\par
00158             \}\par
00159         \}\par
00160         {\cf19 for} ({\cf18 size_t} b = (sizes[i] / 4) * 4; b < sizes[i]; ++b) \{\par
00161             uint8_t v = bp[b];\par
00162             {\cf19 if} (v != (uint8_t)(pat & 0xFF)) \{\par
00163                 gop_printf_forced(0xFF0000FF, {\cf22 "Corrupt tail idx=%d offset=%u\\n"}, i, ({\cf18 unsigned})b);\par
00164                 {\cf19 return} -5;\par
00165             \}\par
00166         \}\par
00167     \}\par
00168 \par
00169     {\cf20 // Phase 3: create fragmentation - free every second block}\par
00170     {\cf19 for} ({\cf18 int} i = 0; i < TEST_ALLOCATIONS; i += 2) \{\par
00171         MtFreeVirtualMemory(blocks[i]);\par
00172         {\cf20 // After free, MtIsHeapAddressAllocated should be false}\par
00173         {\cf19 if} (MtIsHeapAddressAllocated(blocks[i])) \{\par
00174             gop_printf_forced(0xFFFF8000, {\cf22 "Still allocated after free idx=%d ptr=%p\\n"}, i, blocks[i]);\par
00175             {\cf19 return} -6;\par
00176         \}\par
00177         {\cf20 // header-store slot should be cleared (if MtFreeVirtualMemory clears it)}\par
00178         BLOCK_HEADER* hdr = ((BLOCK_HEADER**)blocks[i])[-1];\par
00179         {\cf19 if} (hdr != NULL) \{\par
00180             gop_printf_forced(0xFFFF8000, {\cf22 "Header-store not cleared idx=%d hdr=%p\\n"}, i, hdr);\par
00181             {\cf19 return} -7;\par
00182         \}\par
00183         blocks[i] = NULL; {\cf20 // avoid accidental reuse}\par
00184     \}\par
00185 \par
00186     {\cf20 // Phase 4: attempt to allocate a larger block that should fit into coalesced space}\par
00187     {\cf18 size_t} big_request = MAX_BLOCK * 4; {\cf20 // make it large enough to require coalesce or growth}\par
00188     {\cf18 void}* big_block = MtAllocateVirtualMemory(big_request, 16);\par
00189     {\cf19 if} (!big_block) \{\par
00190         gop_printf_forced(0xFFFF0000, {\cf22 "Big allocation failed (coalesce test)\\n"});\par
00191         {\cf20 // not necessarily a failure in all implementations; treat as warning}\par
00192     \}\par
00193     {\cf19 else} \{\par
00194         {\cf20 // write and verify a quick pattern}\par
00195         kmemset(big_block, 0xAB, big_request < 4096 ? big_request : 4096);\par
00196         MtFreeVirtualMemory(big_block);\par
00197     \}\par
00198 \par
00199     {\cf20 // Phase 5: free remaining blocks in reverse order to stress coalescing}\par
00200     {\cf19 for} ({\cf18 int} i = TEST_ALLOCATIONS - 1; i >= 0; --i) \{\par
00201         {\cf19 if} (blocks[i]) \{\par
00202             {\cf20 // verify before free}\par
00203             {\cf19 if} (!MtIsHeapAddressAllocated(blocks[i])) \{\par
00204                 gop_printf_forced(0xFFFF8000, {\cf22 "Was not allocated before free idx=%d\\n"}, i);\par
00205                 {\cf19 return} -8;\par
00206             \}\par
00207             MtFreeVirtualMemory(blocks[i]);\par
00208             {\cf19 if} (MtIsHeapAddressAllocated(blocks[i])) \{\par
00209                 gop_printf_forced(0xFFFF8000, {\cf22 "Still allocated after free idx=%d\\n"}, i);\par
00210                 {\cf19 return} -9;\par
00211             \}\par
00212             {\cf20 // ensure header-store slot cleared}\par
00213             BLOCK_HEADER* hdr = ((BLOCK_HEADER**)blocks[i])[-1];\par
00214             {\cf19 if} (hdr != NULL) \{\par
00215                 gop_printf_forced(0xFFFF8000, {\cf22 "Header-store not cleared after free idx=%d hdr=%p\\n"}, i, hdr);\par
00216                 {\cf19 return} -10;\par
00217             \}\par
00218             blocks[i] = NULL;\par
00219         \}\par
00220     \}\par
00221     {\cf20 /*}\par
00222 {\cf20     // Phase 6: Test MtAllocateVirtualMemoryEx (page-backed allocation)}\par
00223 {\cf20     size_t ex_size = FRAME_SIZE * 2; // two pages}\par
00224 {\cf20     void* exptr = MtAllocateVirtualMemoryEx(ex_size - sizeof(BLOCK_HEADER), FRAME_SIZE, PAGE_PRESENT | PAGE_RW);}\par
00225 {\cf20     if (!exptr) \{}\par
00226 {\cf20         gop_printf_forced(0xFFFF8000, "MtAllocateVirtualMemoryEx failed\\n");}\par
00227 {\cf20         // warn but continue}\par
00228 {\cf20     \}}\par
00229 {\cf20     else \{}\par
00230 {\cf20         // write/read small pattern}\par
00231 {\cf20         kmemset(exptr, 0x5A, 256);}\par
00232 {\cf20         // free and ensure pages unmapped (MtIsHeapAddressAllocated should be false)}\par
00233 {\cf20         MtFreeVirtualMemory(exptr);}\par
00234 {\cf20         if (MtIsHeapAddressAllocated(exptr)) \{}\par
00235 {\cf20             gop_printf_forced(0xFFFF8000, "EX allocation still reported allocated after free\\n");}\par
00236 {\cf20             return -11;}\par
00237 {\cf20         \}}\par
00238 {\cf20     \}}\par
00239 {\cf20     */}\par
00240     gop_printf_forced(0xFF00FF00, {\cf22 "MemoryTestStable: PASSED\\n"});\par
00241     {\cf19 return} 0;\par
00242 \}\par
00243 \par
00244 {\cf21 #endif }{\cf20 // X86_KERNEL_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/mtstatus.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/mtstatus.h}
{\xe \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/mtstatus.h}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_SUCCEEDED}(Status)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macros to test status. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAILURE}(Status)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_SUCCESS}\~ (({\b MTSTATUS})0x00000000L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_NOT_IMPLEMENTED}\~ (({\b MTSTATUS})0xC0000001L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_INVALID_PARAM}\~ (({\b MTSTATUS})0xC0000002L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_INVALID_STATE}\~ (({\b MTSTATUS})0xC0000003L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_ACCESS_DENIED}\~ (({\b MTSTATUS})0xC0000004L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_TIMEOUT}\~ (({\b MTSTATUS})0xC0000005L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_UNSUPPORTED_OP}\~ (({\b MTSTATUS})0xC0000006L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_ALREADY_EXISTS}\~ (({\b MTSTATUS})0xC0000007L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_NOT_FOUND}\~ (({\b MTSTATUS})0xC0000008L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_GENERAL_FAILURE}\~ (({\b MTSTATUS})0xC0000009L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_INVALID_LOCK}\~ (({\b MTSTATUS})0xC0000010L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_NO_MEMORY}\~ (({\b MTSTATUS})0xC1000001L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_MEMORY_LIMIT}\~ (({\b MTSTATUS})0xC1000002L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_PAGE_FAULT_ERROR}\~ (({\b MTSTATUS})0xC1000003L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_HEAP_CORRUPTION}\~ (({\b MTSTATUS})0xC1000004L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_INVALID_ADDRESS}\~ (({\b MTSTATUS})0xC1000005L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_IO_ERROR}\~ (({\b MTSTATUS})0xC2000001L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_VFS_CORRUPTED}\~ (({\b MTSTATUS})0xC2000002L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_VFS_READ_ONLY}\~ (({\b MTSTATUS})0xC2000003L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_VFS_NO_SPACE}\~ (({\b MTSTATUS})0xC2000004L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_VFS_PERMISSION_DENIED}\~ (({\b MTSTATUS})0xC2000005L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_VFS_INITIALIZATION_FAILURE}\~ (({\b MTSTATUS})0xC2000006L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_VFS_GENERAL_FAILURE}\~ (({\b MTSTATUS})0xC2000007L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_CLUSTERS_FULL}\~ (({\b MTSTATUS})0xC2010001L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_INVALID_CLUSTER}\~ (({\b MTSTATUS})0xC2010002L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_DIR_FULL}\~ (({\b MTSTATUS})0xC2010003L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_FILE_NOT_FOUND}\~ (({\b MTSTATUS})0xC2010004L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_PATH_TOO_LONG}\~ (({\b MTSTATUS})0xC2010005L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_INVALID_FILENAME}\~ (({\b MTSTATUS})0xC2010006L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_EOF}\~ (({\b MTSTATUS})0xC2010007L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_DIRECTORY_ALREADY_EXISTS}\~ (({\b MTSTATUS})0xC2010008L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_PARENT_PATH_NOT_FOUND}\~ (({\b MTSTATUS})0xC2010009L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_PARENT_PATH_NOT_DIR}\~ (({\b MTSTATUS})0xC2010010L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_INVALID_WRITE_MODE}\~ (({\b MTSTATUS})0xC2010011L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_CLUSTER_NOT_FOUND}\~ (({\b MTSTATUS})0xC2010012L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_CLUSTER_GENERAL_FAILURE}\~ (({\b MTSTATUS})0xC2010013L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_FAT32_DIRECTORY_NOT_FOUND}\~ (({\b MTSTATUS})0xC2010014L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_DEVICE_NOT_READY}\~ (({\b MTSTATUS})0xC3000001L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_DEVICE_ERROR}\~ (({\b MTSTATUS})0xC3000002L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_DEVICE_TIMEOUT}\~ (({\b MTSTATUS})0xC3000003L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_DEVICE_UNSUPPORTED}\~ (({\b MTSTATUS})0xC3000004L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_AHCI_INIT_FAILED}\~ (({\b MTSTATUS})0xC3010001L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_AHCI_PORT_FAILURE}\~ (({\b MTSTATUS})0xC3010002L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_AHCI_READ_FAILURE}\~ (({\b MTSTATUS})0xC3010003L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_AHCI_WRITE_FAILURE}\~ (({\b MTSTATUS})0xC3010004L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_AHCI_TIMEOUT}\~ (({\b MTSTATUS})0xC3010005L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_AHCI_GENERAL_FAILURE}\~ (({\b MTSTATUS})0xC3010006L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_THREAD_NOT_FOUND}\~ (({\b MTSTATUS})0xC4000001L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_THREAD_CREATION_FAIL}\~ (({\b MTSTATUS})0xC4000002L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_SCHEDULER_ERROR}\~ (({\b MTSTATUS})0xC4000003L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_INVALID_IRQL}\~ (({\b MTSTATUS})0xC4000004L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_MUTEX_ALREADY_OWNED}\~ (({\b MTSTATUS})0xC5000001L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_MUTEX_NOT_OWNED}\~ (({\b MTSTATUS})0xC5000002L)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MT_EVENT_ALREADY_SIGNALED}\~ (({\b MTSTATUS})0xC6000001L)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int32_t {\b MTSTATUS}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MT_ACCESS_DENIED\:mtstatus.h}
{\xe \v mtstatus.h\:MT_ACCESS_DENIED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_ACCESS_DENIED\~ (({\b MTSTATUS})0xC0000004L)}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_AHCI_GENERAL_FAILURE\:mtstatus.h}
{\xe \v mtstatus.h\:MT_AHCI_GENERAL_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_AHCI_GENERAL_FAILURE\~ (({\b MTSTATUS})0xC3010006L)}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 88} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_AHCI_INIT_FAILED\:mtstatus.h}
{\xe \v mtstatus.h\:MT_AHCI_INIT_FAILED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_AHCI_INIT_FAILED\~ (({\b MTSTATUS})0xC3010001L)}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 83} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_AHCI_PORT_FAILURE\:mtstatus.h}
{\xe \v mtstatus.h\:MT_AHCI_PORT_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_AHCI_PORT_FAILURE\~ (({\b MTSTATUS})0xC3010002L)}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 84} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_AHCI_READ_FAILURE\:mtstatus.h}
{\xe \v mtstatus.h\:MT_AHCI_READ_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_AHCI_READ_FAILURE\~ (({\b MTSTATUS})0xC3010003L)}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 85} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_AHCI_TIMEOUT\:mtstatus.h}
{\xe \v mtstatus.h\:MT_AHCI_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_AHCI_TIMEOUT\~ (({\b MTSTATUS})0xC3010005L)}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 87} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_AHCI_WRITE_FAILURE\:mtstatus.h}
{\xe \v mtstatus.h\:MT_AHCI_WRITE_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_AHCI_WRITE_FAILURE\~ (({\b MTSTATUS})0xC3010004L)}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 86} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_ALREADY_EXISTS\:mtstatus.h}
{\xe \v mtstatus.h\:MT_ALREADY_EXISTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_ALREADY_EXISTS\~ (({\b MTSTATUS})0xC0000007L)}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_DEVICE_ERROR\:mtstatus.h}
{\xe \v mtstatus.h\:MT_DEVICE_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_DEVICE_ERROR\~ (({\b MTSTATUS})0xC3000002L)}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 80} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_DEVICE_NOT_READY\:mtstatus.h}
{\xe \v mtstatus.h\:MT_DEVICE_NOT_READY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_DEVICE_NOT_READY\~ (({\b MTSTATUS})0xC3000001L)}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 79} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_DEVICE_TIMEOUT\:mtstatus.h}
{\xe \v mtstatus.h\:MT_DEVICE_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_DEVICE_TIMEOUT\~ (({\b MTSTATUS})0xC3000003L)}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_DEVICE_UNSUPPORTED\:mtstatus.h}
{\xe \v mtstatus.h\:MT_DEVICE_UNSUPPORTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_DEVICE_UNSUPPORTED\~ (({\b MTSTATUS})0xC3000004L)}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 82} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_EVENT_ALREADY_SIGNALED\:mtstatus.h}
{\xe \v mtstatus.h\:MT_EVENT_ALREADY_SIGNALED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_EVENT_ALREADY_SIGNALED\~ (({\b MTSTATUS})0xC6000001L)}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 110} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAILURE\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAILURE( Status)}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ((Status) < 0)\par
}
{
Definition at line {\b 16} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_CLUSTER_GENERAL_FAILURE\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_CLUSTER_GENERAL_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_CLUSTER_GENERAL_FAILURE\~ (({\b MTSTATUS})0xC2010013L)}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 72} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_CLUSTER_NOT_FOUND\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_CLUSTER_NOT_FOUND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_CLUSTER_NOT_FOUND\~ (({\b MTSTATUS})0xC2010012L)}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 71} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_CLUSTERS_FULL\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_CLUSTERS_FULL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_CLUSTERS_FULL\~ (({\b MTSTATUS})0xC2010001L)}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_DIR_FULL\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_DIR_FULL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_DIR_FULL\~ (({\b MTSTATUS})0xC2010003L)}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 62} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_DIRECTORY_ALREADY_EXISTS\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_DIRECTORY_ALREADY_EXISTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_DIRECTORY_ALREADY_EXISTS\~ (({\b MTSTATUS})0xC2010008L)}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 67} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_DIRECTORY_NOT_FOUND\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_DIRECTORY_NOT_FOUND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_DIRECTORY_NOT_FOUND\~ (({\b MTSTATUS})0xC2010014L)}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 73} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_EOF\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_EOF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_EOF\~ (({\b MTSTATUS})0xC2010007L)}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 66} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_FILE_NOT_FOUND\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_FILE_NOT_FOUND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_FILE_NOT_FOUND\~ (({\b MTSTATUS})0xC2010004L)}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 63} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_INVALID_CLUSTER\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_INVALID_CLUSTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_INVALID_CLUSTER\~ (({\b MTSTATUS})0xC2010002L)}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 61} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_INVALID_FILENAME\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_INVALID_FILENAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_INVALID_FILENAME\~ (({\b MTSTATUS})0xC2010006L)}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 65} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_INVALID_WRITE_MODE\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_INVALID_WRITE_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_INVALID_WRITE_MODE\~ (({\b MTSTATUS})0xC2010011L)}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 70} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_PARENT_PATH_NOT_DIR\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_PARENT_PATH_NOT_DIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_PARENT_PATH_NOT_DIR\~ (({\b MTSTATUS})0xC2010010L)}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 69} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_PARENT_PATH_NOT_FOUND\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_PARENT_PATH_NOT_FOUND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_PARENT_PATH_NOT_FOUND\~ (({\b MTSTATUS})0xC2010009L)}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 68} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_FAT32_PATH_TOO_LONG\:mtstatus.h}
{\xe \v mtstatus.h\:MT_FAT32_PATH_TOO_LONG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_FAT32_PATH_TOO_LONG\~ (({\b MTSTATUS})0xC2010005L)}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 64} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_GENERAL_FAILURE\:mtstatus.h}
{\xe \v mtstatus.h\:MT_GENERAL_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_GENERAL_FAILURE\~ (({\b MTSTATUS})0xC0000009L)}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_HEAP_CORRUPTION\:mtstatus.h}
{\xe \v mtstatus.h\:MT_HEAP_CORRUPTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_HEAP_CORRUPTION\~ (({\b MTSTATUS})0xC1000004L)}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_INVALID_ADDRESS\:mtstatus.h}
{\xe \v mtstatus.h\:MT_INVALID_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_INVALID_ADDRESS\~ (({\b MTSTATUS})0xC1000005L)}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_INVALID_IRQL\:mtstatus.h}
{\xe \v mtstatus.h\:MT_INVALID_IRQL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_INVALID_IRQL\~ (({\b MTSTATUS})0xC4000004L)}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 97} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_INVALID_LOCK\:mtstatus.h}
{\xe \v mtstatus.h\:MT_INVALID_LOCK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_INVALID_LOCK\~ (({\b MTSTATUS})0xC0000010L)}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_INVALID_PARAM\:mtstatus.h}
{\xe \v mtstatus.h\:MT_INVALID_PARAM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_INVALID_PARAM\~ (({\b MTSTATUS})0xC0000002L)}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_INVALID_STATE\:mtstatus.h}
{\xe \v mtstatus.h\:MT_INVALID_STATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_INVALID_STATE\~ (({\b MTSTATUS})0xC0000003L)}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_IO_ERROR\:mtstatus.h}
{\xe \v mtstatus.h\:MT_IO_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_IO_ERROR\~ (({\b MTSTATUS})0xC2000001L)}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_MEMORY_LIMIT\:mtstatus.h}
{\xe \v mtstatus.h\:MT_MEMORY_LIMIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_MEMORY_LIMIT\~ (({\b MTSTATUS})0xC1000002L)}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_MUTEX_ALREADY_OWNED\:mtstatus.h}
{\xe \v mtstatus.h\:MT_MUTEX_ALREADY_OWNED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_MUTEX_ALREADY_OWNED\~ (({\b MTSTATUS})0xC5000001L)}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 103} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_MUTEX_NOT_OWNED\:mtstatus.h}
{\xe \v mtstatus.h\:MT_MUTEX_NOT_OWNED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_MUTEX_NOT_OWNED\~ (({\b MTSTATUS})0xC5000002L)}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 104} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_NO_MEMORY\:mtstatus.h}
{\xe \v mtstatus.h\:MT_NO_MEMORY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_NO_MEMORY\~ (({\b MTSTATUS})0xC1000001L)}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_NOT_FOUND\:mtstatus.h}
{\xe \v mtstatus.h\:MT_NOT_FOUND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_NOT_FOUND\~ (({\b MTSTATUS})0xC0000008L)}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_NOT_IMPLEMENTED\:mtstatus.h}
{\xe \v mtstatus.h\:MT_NOT_IMPLEMENTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_NOT_IMPLEMENTED\~ (({\b MTSTATUS})0xC0000001L)}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_PAGE_FAULT_ERROR\:mtstatus.h}
{\xe \v mtstatus.h\:MT_PAGE_FAULT_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_PAGE_FAULT_ERROR\~ (({\b MTSTATUS})0xC1000003L)}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_SCHEDULER_ERROR\:mtstatus.h}
{\xe \v mtstatus.h\:MT_SCHEDULER_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_SCHEDULER_ERROR\~ (({\b MTSTATUS})0xC4000003L)}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 96} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_SUCCEEDED\:mtstatus.h}
{\xe \v mtstatus.h\:MT_SUCCEEDED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_SUCCEEDED( Status)}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid ((Status) >= 0)\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Macros to test status. }}\par
{
Definition at line {\b 15} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_SUCCESS\:mtstatus.h}
{\xe \v mtstatus.h\:MT_SUCCESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_SUCCESS\~ (({\b MTSTATUS})0x00000000L)}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_THREAD_CREATION_FAIL\:mtstatus.h}
{\xe \v mtstatus.h\:MT_THREAD_CREATION_FAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_THREAD_CREATION_FAIL\~ (({\b MTSTATUS})0xC4000002L)}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 95} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_THREAD_NOT_FOUND\:mtstatus.h}
{\xe \v mtstatus.h\:MT_THREAD_NOT_FOUND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_THREAD_NOT_FOUND\~ (({\b MTSTATUS})0xC4000001L)}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 94} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_TIMEOUT\:mtstatus.h}
{\xe \v mtstatus.h\:MT_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_TIMEOUT\~ (({\b MTSTATUS})0xC0000005L)}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_UNSUPPORTED_OP\:mtstatus.h}
{\xe \v mtstatus.h\:MT_UNSUPPORTED_OP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_UNSUPPORTED_OP\~ (({\b MTSTATUS})0xC0000006L)}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_VFS_CORRUPTED\:mtstatus.h}
{\xe \v mtstatus.h\:MT_VFS_CORRUPTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_VFS_CORRUPTED\~ (({\b MTSTATUS})0xC2000002L)}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_VFS_GENERAL_FAILURE\:mtstatus.h}
{\xe \v mtstatus.h\:MT_VFS_GENERAL_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_VFS_GENERAL_FAILURE\~ (({\b MTSTATUS})0xC2000007L)}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_VFS_INITIALIZATION_FAILURE\:mtstatus.h}
{\xe \v mtstatus.h\:MT_VFS_INITIALIZATION_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_VFS_INITIALIZATION_FAILURE\~ (({\b MTSTATUS})0xC2000006L)}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 53} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_VFS_NO_SPACE\:mtstatus.h}
{\xe \v mtstatus.h\:MT_VFS_NO_SPACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_VFS_NO_SPACE\~ (({\b MTSTATUS})0xC2000004L)}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_VFS_PERMISSION_DENIED\:mtstatus.h}
{\xe \v mtstatus.h\:MT_VFS_PERMISSION_DENIED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_VFS_PERMISSION_DENIED\~ (({\b MTSTATUS})0xC2000005L)}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b mtstatus.h}.}\par
}
{\xe \v MT_VFS_READ_ONLY\:mtstatus.h}
{\xe \v mtstatus.h\:MT_VFS_READ_ONLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MT_VFS_READ_ONLY\~ (({\b MTSTATUS})0xC2000003L)}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 50} of file {\b mtstatus.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v MTSTATUS\:mtstatus.h}
{\xe \v mtstatus.h\:MTSTATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int32_t {\b MTSTATUS}}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b mtstatus.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mtstatus.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/mtstatus.h}
{\xe \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/mtstatus.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * PROJECT:      MatanelOS Kernel}\par
00003 {\cf20  * LICENSE:      GPLv3}\par
00004 {\cf20  * PURPOSE:      MTStatus definitions per subsystem or kernel wide. (STATUS RETURNS)}\par
00005 {\cf20  */}\par
00006 \par
00007 {\cf21 #ifndef MTSTATUS_H}\par
00008 {\cf21 #define MTSTATUS_H}\par
00009 \par
00010 {\cf21 #include <stdint.h>}\par
00011 \par
00012 {\cf17 typedef} int32_t MTSTATUS;\par
00013 \par
00015 {\cf21 #define MT_SUCCEEDED(Status) ((Status) >= 0)}\par
00016 {\cf21 #define MT_FAILURE(Status)    ((Status) < 0)}\par
00017 \par
00018 {\cf20 //}\par
00019 {\cf20 // ==========================}\par
00020 {\cf20 // GENERAL MTSTATUS}\par
00021 {\cf20 // ==========================}\par
00022 {\cf21 #define MT_SUCCESS              ((MTSTATUS)0x00000000L)}\par
00023 {\cf21 #define MT_NOT_IMPLEMENTED      ((MTSTATUS)0xC0000001L)}\par
00024 {\cf21 #define MT_INVALID_PARAM        ((MTSTATUS)0xC0000002L)}\par
00025 {\cf21 #define MT_INVALID_STATE        ((MTSTATUS)0xC0000003L)}\par
00026 {\cf21 #define MT_ACCESS_DENIED        ((MTSTATUS)0xC0000004L)}\par
00027 {\cf21 #define MT_TIMEOUT              ((MTSTATUS)0xC0000005L)}\par
00028 {\cf21 #define MT_UNSUPPORTED_OP       ((MTSTATUS)0xC0000006L)}\par
00029 {\cf21 #define MT_ALREADY_EXISTS       ((MTSTATUS)0xC0000007L)}\par
00030 {\cf21 #define MT_NOT_FOUND            ((MTSTATUS)0xC0000008L)}\par
00031 {\cf21 #define MT_GENERAL_FAILURE      ((MTSTATUS)0xC0000009L)}\par
00032 {\cf21 #define MT_INVALID_LOCK         ((MTSTATUS)0xC0000010L)}\par
00033 \par
00034 {\cf20 //}\par
00035 {\cf20 // ==========================}\par
00036 {\cf20 // MEMORY MTSTATUS}\par
00037 {\cf20 // ==========================}\par
00038 {\cf21 #define MT_NO_MEMORY            ((MTSTATUS)0xC1000001L)}\par
00039 {\cf21 #define MT_MEMORY_LIMIT         ((MTSTATUS)0xC1000002L)}\par
00040 {\cf21 #define MT_PAGE_FAULT_ERROR     ((MTSTATUS)0xC1000003L)}\par
00041 {\cf21 #define MT_HEAP_CORRUPTION      ((MTSTATUS)0xC1000004L)}\par
00042 {\cf21 #define MT_INVALID_ADDRESS      ((MTSTATUS)0xC1000005L)}\par
00043 \par
00044 {\cf20 //}\par
00045 {\cf20 // ==========================}\par
00046 {\cf20 // VIRTUAL FILESYSTEM MTSTATUS}\par
00047 {\cf20 // ==========================}\par
00048 {\cf21 #define MT_IO_ERROR                     ((MTSTATUS)0xC2000001L)}\par
00049 {\cf21 #define MT_VFS_CORRUPTED                ((MTSTATUS)0xC2000002L)}\par
00050 {\cf21 #define MT_VFS_READ_ONLY                ((MTSTATUS)0xC2000003L)}\par
00051 {\cf21 #define MT_VFS_NO_SPACE                 ((MTSTATUS)0xC2000004L)}\par
00052 {\cf21 #define MT_VFS_PERMISSION_DENIED        ((MTSTATUS)0xC2000005L)}\par
00053 {\cf21 #define MT_VFS_INITIALIZATION_FAILURE   ((MTSTATUS)0xC2000006L)}\par
00054 {\cf21 #define MT_VFS_GENERAL_FAILURE          ((MTSTATUS)0xC2000007L)}\par
00055 \par
00056 {\cf20 //}\par
00057 {\cf20 // ==========================}\par
00058 {\cf20 // FAT32-specific MTSTATUS}\par
00059 {\cf20 // ==========================}\par
00060 {\cf21 #define MT_FAT32_CLUSTERS_FULL      ((MTSTATUS)0xC2010001L) }{\cf20 // No free clusters left}\par
00061 {\cf21 #define MT_FAT32_INVALID_CLUSTER    ((MTSTATUS)0xC2010002L) }{\cf20 // Invalid cluster reference}\par
00062 {\cf21 #define MT_FAT32_DIR_FULL           ((MTSTATUS)0xC2010003L) }{\cf20 // Directory has no free entries}\par
00063 {\cf21 #define MT_FAT32_FILE_NOT_FOUND     ((MTSTATUS)0xC2010004L)}\par
00064 {\cf21 #define MT_FAT32_PATH_TOO_LONG      ((MTSTATUS)0xC2010005L)}\par
00065 {\cf21 #define MT_FAT32_INVALID_FILENAME   ((MTSTATUS)0xC2010006L)}\par
00066 {\cf21 #define MT_FAT32_EOF                ((MTSTATUS)0xC2010007L) }{\cf20 // End of file reached}\par
00067 {\cf21 #define MT_FAT32_DIRECTORY_ALREADY_EXISTS ((MTSTATUS)0xC2010008L) }{\cf20 // The specified directory already exists in the path.}\par
00068 {\cf21 #define MT_FAT32_PARENT_PATH_NOT_FOUND ((MTSTATUS)0xC2010009L) }{\cf20 // The directory's parent path has not been found.}\par
00069 {\cf21 #define MT_FAT32_PARENT_PATH_NOT_DIR ((MTSTATUS)0xC2010010L) }{\cf20 // The directory's parent path is not a directory.}\par
00070 {\cf21 #define MT_FAT32_INVALID_WRITE_MODE ((MTSTATUS)0xC2010011L) }{\cf20 // The write mode given to the function is invalid. (Not in FAT32_WRITE_MODE enum)}\par
00071 {\cf21 #define MT_FAT32_CLUSTER_NOT_FOUND ((MTSTATUS)0xC2010012L) }{\cf20 // The directory's / file cluster couldn't have been found.}\par
00072 {\cf21 #define MT_FAT32_CLUSTER_GENERAL_FAILURE ((MTSTATUS)0xC2010013L) }{\cf20 // General failure on a cluster operation.}\par
00073 {\cf21 #define MT_FAT32_DIRECTORY_NOT_FOUND ((MTSTATUS)0xC2010014L) }{\cf20 // FAT32 Directory not found.}\par
00074 \par
00075 {\cf20 //}\par
00076 {\cf20 // ==========================}\par
00077 {\cf20 // DRIVER / DEVICE MTSTATUS}\par
00078 {\cf20 // ==========================}\par
00079 {\cf21 #define MT_DEVICE_NOT_READY     ((MTSTATUS)0xC3000001L)}\par
00080 {\cf21 #define MT_DEVICE_ERROR         ((MTSTATUS)0xC3000002L)}\par
00081 {\cf21 #define MT_DEVICE_TIMEOUT       ((MTSTATUS)0xC3000003L)}\par
00082 {\cf21 #define MT_DEVICE_UNSUPPORTED   ((MTSTATUS)0xC3000004L)}\par
00083 {\cf21 #define MT_AHCI_INIT_FAILED     ((MTSTATUS)0xC3010001L)}\par
00084 {\cf21 #define MT_AHCI_PORT_FAILURE    ((MTSTATUS)0xC3010002L)}\par
00085 {\cf21 #define MT_AHCI_READ_FAILURE    ((MTSTATUS)0xC3010003L)}\par
00086 {\cf21 #define MT_AHCI_WRITE_FAILURE   ((MTSTATUS)0xC3010004L)}\par
00087 {\cf21 #define MT_AHCI_TIMEOUT         ((MTSTATUS)0xC3010005L)}\par
00088 {\cf21 #define MT_AHCI_GENERAL_FAILURE ((MTSTATUS)0xC3010006L)}\par
00089 \par
00090 {\cf20 //}\par
00091 {\cf20 // ==========================}\par
00092 {\cf20 // THREAD / SCHEDULER MTSTATUS}\par
00093 {\cf20 // ==========================}\par
00094 {\cf21 #define MT_THREAD_NOT_FOUND     ((MTSTATUS)0xC4000001L)}\par
00095 {\cf21 #define MT_THREAD_CREATION_FAIL ((MTSTATUS)0xC4000002L)}\par
00096 {\cf21 #define MT_SCHEDULER_ERROR      ((MTSTATUS)0xC4000003L)}\par
00097 {\cf21 #define MT_INVALID_IRQL         ((MTSTATUS)0xC4000004L)}\par
00098 \par
00099 {\cf20 //}\par
00100 {\cf20 // ==========================}\par
00101 {\cf20 // MUTEX MTSTATUS}\par
00102 {\cf20 // ==========================}\par
00103 {\cf21 #define MT_MUTEX_ALREADY_OWNED ((MTSTATUS)0xC5000001L)}\par
00104 {\cf21 #define MT_MUTEX_NOT_OWNED     ((MTSTATUS)0xC5000002L)}\par
00105 \par
00106 {\cf20 //}\par
00107 {\cf20 // ==========================}\par
00108 {\cf20 // EVENT MTSTATUS}\par
00109 {\cf20 // ==========================}\par
00110 {\cf21 #define MT_EVENT_ALREADY_SIGNALED ((MTSTATUS)0xC6000001L)}\par
00111 \par
00112 {\cf21 #endif }{\cf20 // MTSTATUS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h}
{\xe \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h}
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include "intrin/intrin.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TIME_ENTRY}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CMOS_ADDRESS}\~ 0x70\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CMOS_DATA}\~ 0x71\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CMOS_ADDRESS\:time.h}
{\xe \v time.h\:CMOS_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CMOS_ADDRESS\~ 0x70}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b time.h}.}\par
}
{\xe \v CMOS_DATA\:time.h}
{\xe \v time.h\:CMOS_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CMOS_DATA\~ 0x71}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b time.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
time.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h}
{\xe \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * PROJECT:     MatanelOS Kernel}\par
00003 {\cf20  * LICENSE:     NONE}\par
00004 {\cf20  * PURPOSE:     CMOS Time implementation.}\par
00005 {\cf20  */}\par
00006 \par
00007 {\cf21 #ifndef X86_TIME_H}\par
00008 {\cf21 #define X86_TIME_H}\par
00009 {\cf21 #include <stdint.h>}\par
00010 {\cf21 #include <stdbool.h>}\par
00011 {\cf21 #include "intrin/intrin.h"}\par
00012 \par
00013 {\cf20 // RTC CMOS ports}\par
00014 {\cf21 #define CMOS_ADDRESS 0x70}\par
00015 {\cf21 #define CMOS_DATA    0x71}\par
00016 \par
00017 {\cf20 // TIME_ENTRY struct with full date}\par
00018 {\cf17 typedef} {\cf17 struct }\{\par
00019     uint8_t second;   {\cf20 // 0\'9659}\par
00020     uint8_t minute;   {\cf20 // 0\'9659}\par
00021     uint8_t hour;     {\cf20 // 0\'9623}\par
00022     uint8_t day;      {\cf20 // 1\'9631}\par
00023     uint8_t month;    {\cf20 // 1\'9612}\par
00024     uint16_t year;    {\cf20 // full year, e.g., 2025}\par
00025 \} TIME_ENTRY;\par
00026 \par
00027 {\cf20 // Read from CMOS}\par
00028 {\cf17 static} {\cf17 inline} uint8_t cmos_read(uint8_t reg) \{\par
00029     __outbyte(CMOS_ADDRESS, reg);\par
00030     {\cf19 return} __inbyte(CMOS_DATA);\par
00031 \}\par
00032 \par
00033 {\cf20 // Check if RTC is updating}\par
00034 {\cf17 static} {\cf17 inline} {\cf18 bool} rtc_updating({\cf18 void}) \{\par
00035     __outbyte(CMOS_ADDRESS, 0x0A);\par
00036     {\cf19 return} (__inbyte(CMOS_DATA) & 0x80) != 0;\par
00037 \}\par
00038 \par
00039 {\cf20 // Convert BCD \'E2\'86\'92 binary}\par
00040 {\cf17 static} {\cf17 inline} uint8_t bcd_to_bin(uint8_t val) \{\par
00041     {\cf19 return} ((val >> 4) * 10) + (val & 0x0F);\par
00042 \}\par
00043 \par
00044 {\cf20 // Get current time/date (GIVES UTC TIME)}\par
00045 {\cf17 static} TIME_ENTRY get_time({\cf18 void}) \{\par
00046     TIME_ENTRY t;\par
00047     uint8_t century = 0;\par
00048     uint8_t regB;\par
00049 \par
00050     {\cf20 // Wait until RTC is not updating}\par
00051     {\cf19 while} (rtc_updating());\par
00052 \par
00053     {\cf20 // Read raw values}\par
00054     t.second = cmos_read(0x00);\par
00055     t.minute = cmos_read(0x02);\par
00056     t.hour = cmos_read(0x04);\par
00057     t.day = cmos_read(0x07);\par
00058     t.month = cmos_read(0x08);\par
00059     uint8_t year = cmos_read(0x09);\par
00060 \par
00061     {\cf20 // Some BIOSes provide century register (0x32) if available}\par
00062     century = cmos_read(0x32);\par
00063 \par
00064     {\cf20 // Status register B tells us data format}\par
00065     regB = cmos_read(0x0B);\par
00066 \par
00067     {\cf20 // Convert from BCD if needed}\par
00068     {\cf19 if} (!(regB & 0x04)) \{\par
00069         t.second = bcd_to_bin(t.second);\par
00070         t.minute = bcd_to_bin(t.minute);\par
00071         t.hour = bcd_to_bin(t.hour & 0x7F);\par
00072         t.day = bcd_to_bin(t.day);\par
00073         t.month = bcd_to_bin(t.month);\par
00074         year = bcd_to_bin(year);\par
00075         {\cf19 if} (century) century = bcd_to_bin(century);\par
00076     \}\par
00077 \par
00078     {\cf20 // Convert 12h \'E2\'86\'92 24h if needed}\par
00079     {\cf19 if} (!(regB & 0x02) && (t.hour & 0x80)) \{\par
00080         t.hour = ((t.hour & 0x7F) + 12) % 24;\par
00081     \}\par
00082 \par
00083     {\cf20 // Build full year}\par
00084     {\cf19 if} (century != 0) \{\par
00085         t.year = (century * 100) + year;\par
00086     \}\par
00087     {\cf19 else} \{\par
00088         {\cf20 // Fallback: assume 20xx}\par
00089         t.year = 2000 + year;\par
00090     \}\par
00091 \par
00092     {\cf19 return} t;\par
00093 \}\par
00094 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/trace.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/trace.h}
{\xe \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/trace.h}
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stddef.h>}\par
{\f2 #include <stdint.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include "intrin/intrin.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LASTFUNC_HISTORY}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LASTFUNC_BUFFER_SIZE}\~ 128\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LASTFUNC_HISTORY_SIZE}\~ 25\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v LASTFUNC_BUFFER_SIZE\:trace.h}
{\xe \v trace.h\:LASTFUNC_BUFFER_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LASTFUNC_BUFFER_SIZE\~ 128}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b trace.h}.}\par
}
{\xe \v LASTFUNC_HISTORY_SIZE\:trace.h}
{\xe \v trace.h\:LASTFUNC_HISTORY_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LASTFUNC_HISTORY_SIZE\~ 25}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b trace.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
trace.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/trace.h}
{\xe \v C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/trace.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // trace.h}\par
00002 {\cf21 #ifndef TRACE_H}\par
00003 {\cf21 #define TRACE_H}\par
00004 \par
00005 {\cf21 #include <stddef.h>}\par
00006 {\cf21 #include <stdint.h>}\par
00007 {\cf21 #include <stdbool.h>}\par
00008 {\cf21 #include "intrin/intrin.h"}\par
00009 \par
00010 {\cf21 #define LASTFUNC_BUFFER_SIZE 128}\par
00011 {\cf21 #define LASTFUNC_HISTORY_SIZE 25}\par
00012 \par
00013 {\cf17 typedef} {\cf17 struct }\{\par
00014     uint8_t names[LASTFUNC_HISTORY_SIZE][LASTFUNC_BUFFER_SIZE];\par
00015     {\cf18 int}     current_index;\par
00016 \} LASTFUNC_HISTORY;\par
00017 \par
00018 {\cf20 // this stays `static inline` so every .c gets its own copy}\par
00019 {\cf17 static} {\cf17 inline} {\cf18 void} tracelast_func({\cf17 const} {\cf18 char}* function_name) \{\par
00020 {\cf21 #ifdef GDB}\par
00021     {\cf20 // if GDB is defined, we wont trace last functions, as it is VERY hard to debug with having to step 128 times.}\par
00022     UNREFERENCED_PARAMETER(function_name);\par
00023     {\cf19 return};\par
00024 {\cf21 #elif defined(DEBUG)}\par
00025     {\cf17 extern} {\cf18 bool} isBugChecking;\par
00026     {\cf17 extern} LASTFUNC_HISTORY lastfunc_history;\par
00027 \par
00028     {\cf19 if} (!function_name || isBugChecking) {\cf19 return};\par
00029 \par
00030     lastfunc_history.current_index =\par
00031         (lastfunc_history.current_index + 1) % LASTFUNC_HISTORY_SIZE;\par
00032 \par
00033     {\cf20 // Clear entire buffer slot to 0 to avoid leftover garbage}\par
00034     {\cf19 for} ({\cf18 size_t} j = 0; j < LASTFUNC_BUFFER_SIZE; j++) \{\par
00035         lastfunc_history.names[lastfunc_history.current_index][j] = 0;\par
00036     \}\par
00037 \par
00038     {\cf20 // Copy function_name safely}\par
00039     {\cf19 for} ({\cf18 size_t} i = 0; i < LASTFUNC_BUFFER_SIZE - 1 && function_name[i]; i++) \{\par
00040         lastfunc_history.names[lastfunc_history.current_index][i] =\par
00041             (uint8_t)function_name[i];\par
00042     \}\par
00043     {\cf20 // Explicit null terminator already guaranteed by zero clear}\par
00044 {\cf21 #else}\par
00045     UNREFERENCED_PARAMETER(function_name);\par
00046     {\cf19 return};\par
00047 {\cf21 #endif}\par
00048 \}\par
00049 \par
00050 {\cf21 #endif }{\cf20 // TRACE_H}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
