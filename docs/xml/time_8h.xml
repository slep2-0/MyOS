<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="time_8h" kind="file" language="C++">
    <compoundname>time.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="yes">intrin/intrin.h</includes>
    <includedby refid="kernel_8h" local="yes">C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/kernel.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h</label>
        <link refid="time_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>intrin/intrin.h</label>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/kernel.c</label>
        <link refid="kernel_8c"/>
      </node>
      <node id="2">
        <label>C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h</label>
        <link refid="time_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_t_i_m_e___e_n_t_r_y" prot="public">TIME_ENTRY</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="time_8h_1aacb8fc8b7efa32c2381ebd467a2ad7d3" prot="public" static="no">
        <name>CMOS_ADDRESS</name>
        <initializer>0x70</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h" line="14" column="9" bodyfile="C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="time_8h_1a5554a9134430636bc1044eb72126fe32" prot="public" static="no">
        <name>CMOS_DATA</name>
        <initializer>0x71</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h" line="15" column="9" bodyfile="C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h" bodystart="15" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="time_8h_1af1a1e5c54dbff7de336450e0912fd193" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t cmos_read</definition>
        <argsstring>(uint8_t reg)</argsstring>
        <name>cmos_read</name>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h" line="28" column="23" bodyfile="C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="time_8h_1ae0dba2bf44fe9b7525df6887094e7f4b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool rtc_updating</definition>
        <argsstring>(void)</argsstring>
        <name>rtc_updating</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h" line="34" column="20" bodyfile="C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="time_8h_1a51581170d5b894353564f8538861e865" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t bcd_to_bin</definition>
        <argsstring>(uint8_t val)</argsstring>
        <name>bcd_to_bin</name>
        <param>
          <type>uint8_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h" line="40" column="23" bodyfile="C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="time_8h_1a604cd044fa7f8bfff7fcd21dba25478e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_t_i_m_e___e_n_t_r_y" kindref="compound">TIME_ENTRY</ref></type>
        <definition>static TIME_ENTRY get_time</definition>
        <argsstring>(void)</argsstring>
        <name>get_time</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h" line="45" column="19" bodyfile="C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h" bodystart="45" bodyend="93"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>PROJECT:<sp/><sp/><sp/><sp/><sp/>MatanelOS<sp/>Kernel</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>LICENSE:<sp/><sp/><sp/><sp/><sp/>NONE</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>PURPOSE:<sp/><sp/><sp/><sp/><sp/>CMOS<sp/>Time<sp/>implementation.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>X86_TIME_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>X86_TIME_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;intrin/intrin.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RTC<sp/>CMOS<sp/>ports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="time_8h_1aacb8fc8b7efa32c2381ebd467a2ad7d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMOS_ADDRESS<sp/>0x70</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="time_8h_1a5554a9134430636bc1044eb72126fe32" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CMOS_DATA<sp/><sp/><sp/><sp/>0x71</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TIME_ENTRY<sp/>struct<sp/>with<sp/>full<sp/>date</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="struct_t_i_m_e___e_n_t_r_y" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="19" refid="struct_t_i_m_e___e_n_t_r_y_1a8459fc4e94de7eefc74991e41779c8fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_t_i_m_e___e_n_t_r_y_1a8459fc4e94de7eefc74991e41779c8fc" kindref="member">second</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0â€“59</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="struct_t_i_m_e___e_n_t_r_y_1a8ff981ec55c945940f4a0da7d8709b3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_t_i_m_e___e_n_t_r_y_1a8ff981ec55c945940f4a0da7d8709b3c" kindref="member">minute</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0â€“59</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="struct_t_i_m_e___e_n_t_r_y_1ae5af4ff48939d13d480f87e56a9385d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_t_i_m_e___e_n_t_r_y_1ae5af4ff48939d13d480f87e56a9385d6" kindref="member">hour</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0â€“23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="struct_t_i_m_e___e_n_t_r_y_1a72369a1087b2aeffe374bb054cb97c12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_t_i_m_e___e_n_t_r_y_1a72369a1087b2aeffe374bb054cb97c12" kindref="member">day</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1â€“31</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="struct_t_i_m_e___e_n_t_r_y_1a3e00faf7fbf9805e9ec4d2edd6339050" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_t_i_m_e___e_n_t_r_y_1a3e00faf7fbf9805e9ec4d2edd6339050" kindref="member">month</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1â€“12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="struct_t_i_m_e___e_n_t_r_y_1a57ca98d8f6d4baf0fe41c583c7dcb0d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_t_i_m_e___e_n_t_r_y_1a57ca98d8f6d4baf0fe41c583c7dcb0d5" kindref="member">year</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>full<sp/>year,<sp/>e.g.,<sp/>2025</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">}<sp/><ref refid="struct_t_i_m_e___e_n_t_r_y" kindref="compound">TIME_ENTRY</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>from<sp/>CMOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/>cmos_read(uint8_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>__outbyte(<ref refid="time_8h_1aacb8fc8b7efa32c2381ebd467a2ad7d3" kindref="member">CMOS_ADDRESS</ref>,<sp/>reg);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__inbyte(<ref refid="time_8h_1a5554a9134430636bc1044eb72126fe32" kindref="member">CMOS_DATA</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>RTC<sp/>is<sp/>updating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rtc_updating(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>__outbyte(<ref refid="time_8h_1aacb8fc8b7efa32c2381ebd467a2ad7d3" kindref="member">CMOS_ADDRESS</ref>,<sp/>0x0A);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(__inbyte(<ref refid="time_8h_1a5554a9134430636bc1044eb72126fe32" kindref="member">CMOS_DATA</ref>)<sp/>&amp;<sp/>0x80)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>BCD<sp/>â†’<sp/>binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/>bcd_to_bin(uint8_t<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((val<sp/>&gt;&gt;<sp/>4)<sp/>*<sp/>10)<sp/>+<sp/>(val<sp/>&amp;<sp/>0x0F);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>time/date<sp/>(GIVES<sp/>UTC<sp/>TIME)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_t_i_m_e___e_n_t_r_y" kindref="compound">TIME_ENTRY</ref><sp/>get_time(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_i_m_e___e_n_t_r_y" kindref="compound">TIME_ENTRY</ref><sp/>t;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>century<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>regB;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>RTC<sp/>is<sp/>not<sp/>updating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(rtc_updating());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>raw<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a8459fc4e94de7eefc74991e41779c8fc" kindref="member">second</ref><sp/>=<sp/>cmos_read(0x00);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a8ff981ec55c945940f4a0da7d8709b3c" kindref="member">minute</ref><sp/>=<sp/>cmos_read(0x02);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1ae5af4ff48939d13d480f87e56a9385d6" kindref="member">hour</ref><sp/>=<sp/>cmos_read(0x04);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a72369a1087b2aeffe374bb054cb97c12" kindref="member">day</ref><sp/>=<sp/>cmos_read(0x07);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a3e00faf7fbf9805e9ec4d2edd6339050" kindref="member">month</ref><sp/>=<sp/>cmos_read(0x08);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>year<sp/>=<sp/>cmos_read(0x09);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>BIOSes<sp/>provide<sp/>century<sp/>register<sp/>(0x32)<sp/>if<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>century<sp/>=<sp/>cmos_read(0x32);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Status<sp/>register<sp/>B<sp/>tells<sp/>us<sp/>data<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>regB<sp/>=<sp/>cmos_read(0x0B);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>from<sp/>BCD<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(regB<sp/>&amp;<sp/>0x04))<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a8459fc4e94de7eefc74991e41779c8fc" kindref="member">second</ref><sp/>=<sp/>bcd_to_bin(t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a8459fc4e94de7eefc74991e41779c8fc" kindref="member">second</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a8ff981ec55c945940f4a0da7d8709b3c" kindref="member">minute</ref><sp/>=<sp/>bcd_to_bin(t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a8ff981ec55c945940f4a0da7d8709b3c" kindref="member">minute</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1ae5af4ff48939d13d480f87e56a9385d6" kindref="member">hour</ref><sp/>=<sp/>bcd_to_bin(t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1ae5af4ff48939d13d480f87e56a9385d6" kindref="member">hour</ref><sp/>&amp;<sp/>0x7F);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a72369a1087b2aeffe374bb054cb97c12" kindref="member">day</ref><sp/>=<sp/>bcd_to_bin(t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a72369a1087b2aeffe374bb054cb97c12" kindref="member">day</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a3e00faf7fbf9805e9ec4d2edd6339050" kindref="member">month</ref><sp/>=<sp/>bcd_to_bin(t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a3e00faf7fbf9805e9ec4d2edd6339050" kindref="member">month</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>year<sp/>=<sp/>bcd_to_bin(year);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(century)<sp/>century<sp/>=<sp/>bcd_to_bin(century);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>12h<sp/>â†’<sp/>24h<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(regB<sp/>&amp;<sp/>0x02)<sp/>&amp;&amp;<sp/>(t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1ae5af4ff48939d13d480f87e56a9385d6" kindref="member">hour</ref><sp/>&amp;<sp/>0x80))<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1ae5af4ff48939d13d480f87e56a9385d6" kindref="member">hour</ref><sp/>=<sp/>((t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1ae5af4ff48939d13d480f87e56a9385d6" kindref="member">hour</ref><sp/>&amp;<sp/>0x7F)<sp/>+<sp/>12)<sp/>%<sp/>24;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>full<sp/>year</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(century<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a57ca98d8f6d4baf0fe41c583c7dcb0d5" kindref="member">year</ref><sp/>=<sp/>(century<sp/>*<sp/>100)<sp/>+<sp/>year;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fallback:<sp/>assume<sp/>20xx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="struct_t_i_m_e___e_n_t_r_y_1a57ca98d8f6d4baf0fe41c583c7dcb0d5" kindref="member">year</ref><sp/>=<sp/>2000<sp/>+<sp/>year;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/matanel/Desktop/Projects/KernelDevelopment/kernel/time.h"/>
  </compounddef>
</doxygen>
